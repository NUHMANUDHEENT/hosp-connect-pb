syntax = "proto3";

package appointment;

import "google/protobuf/timestamp.proto";

option go_package = "/appointment";
    
// Service Definition
service AppointmentService {
    // Check available doctors and their next available time slot
    rpc CheckAvailability(GetAvailabilityRequest) returns (GetAvailabilityResponse);

    rpc CheckAvailabilityByDoctorId(CheckAvailabilityByDoctorIdRequest) returns (CheckAvailabilityByDoctorIdResponse);

    // Confirm an appointment for a specific doctor and time
    rpc ConfirmAppointment(ConfirmAppointmentRequest) returns (ConfirmAppointmentResponse);

    // Complete payment for an appointment
    rpc CompletePayment(CompletePaymentRequest) returns (CompletePaymentResponse);

    rpc GetAppointmentDetails(GetAppointmentDetailsRequest) returns (GetAppointmentDetailsResponse);

    rpc GetUpcomingAppointments(GetAppointmentsRequest) returns (GetAppointmentsResponse);

    rpc CreateRoomForVideoTreatment(VideoRoomRequest) returns (VideoRoomResponse);

    rpc FetchStatisticsDetails(StatisticsRequest) returns (StatisticsResponse);
    rpc AddSpecialization(AddSpecializationRequest) returns (StandardResponse);
    rpc GetTotalAppointment(GetTotalAppointmentRequest) returns (GetTotalAppointmentResponse);
}


message GetAvailabilityRequest {
    string doctor_id = 1;    
    google.protobuf.Timestamp requested_date_time = 2;  
    int32 category_id = 3;
     
  }
  
  message GetAvailabilityResponse {
    repeated AvailabilitySlot available_slots = 1;  // List of available slots
  }
  message CheckAvailabilityByDoctorIdRequest{
    string doctor_id =1;
  }
  message CheckAvailabilityByDoctorIdResponse{
    string status = 1;
    string doctor_id =2;
    repeated DoctorAvailability doctor_availability =4;
  }
  message DoctorAvailability{
    string Date_time = 1;
    string Is_available =2;
  }
  message StatisticsRequest{
    string param = 1;
  }

  message AvailabilitySlot {
    string doctor_id = 1;    // ID of the doctor
    string doctor_name = 2;  // Name of the doctor
  }

// Request to confirm an appointment
message ConfirmAppointmentRequest {
    string patient_id = 1;    // ID of the patient
    string doctor_id = 2;     // ID of the doctor
    int32 specialization_id = 3;
    google.protobuf.Timestamp confirmed_date_time = 4; // Confirmed appointment time
    string type =5;
}
  
// Response after confirming an appointment
message ConfirmAppointmentResponse {
    string status = 2;            // Status of the appointment confirmation
    string message = 3;           // Any relevant message (e.g., "Appointment confirmed")
    int32 status_code = 4;
    int32 appointment_id = 5;
    string payment_url =6;
}

// Request to complete the payment for a confirmed appointment
message CompletePaymentRequest {
    string appointment_id = 1;    // ID of the confirmed appointment
    string payment_method = 2;    // Payment method (e.g., "credit_card", "paypal")
    string payment_id = 3;
    double amount = 4;            // Amount to be paid
}

// Response after completing the payment
message CompletePaymentResponse {
    string status = 1;            // Status of the payment (e.g., "success", "failed")
    string message = 2;           // Payment-related message
    int32 status_code = 3;
}
message GetAppointmentDetailsRequest{
  string order_id =1;
}
message GetAppointmentDetailsResponse{
  int64 appointment_id = 1;
  string doctor_id = 2;
  string appointment_type = 3;
  int64 specialization_id = 4;
  google.protobuf.Timestamp appointment_time = 5; 
  string status = 6;
  int64 status_code = 7;
  string message = 8;
}

message GetAppointmentsRequest {
  string patient_id = 1;
}

message Appointment {
  int64 appointment_id = 1;
  string doctor_id = 2;
  string appointment_type = 3;
  string doctor_name = 4;
  int64 specialization = 5;
  string appointment_time = 6; 
}

message GetAppointmentsResponse {
  repeated Appointment appointments = 1;
  string message = 2; 
  string status = 3;
  int32 status_code = 4;
}
message VideoRoomRequest{
  string doctor_id = 1;
  string patient_id = 2;
  int64 specialization_id =3;
}
message VideoRoomResponse{
  string message = 1;
  string status = 2;
  string status_code = 3;
  string room_url =4;
}

message StatisticsResponse {
  int32 totalPatients = 1;
  int32 totalAppointments = 2;
  float totalRevenue = 3;
  repeated SpecializationStats specializationStats = 4;
  string admin_name = 5;
}

message SpecializationStats {
  string specializationName = 1;
  int32 appointmentCount = 2;
}
message AddSpecializationRequest{
  string name = 1;
  string description = 2;
}
message StandardResponse {
  string status = 1;
  int32 status_code = 2; 
  string message = 3;    
  string error = 4;     
}
message GetTotalAppointmentRequest{
  string param =1;
}

message GetTotalAppointmentResponse{
  double total_appointment = 1;
}