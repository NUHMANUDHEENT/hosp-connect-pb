syntax = "proto3";

package payment;

option go_package = "/payment";

service PaymentService {
  rpc CreateRazorOrderId(CreateRazorOrderIdRequest) returns (CreateRazorOrderIdResponse);
  rpc CreateAppointmentFeePayment(CreateAppointmentFeePaymentRequest) returns (CreateAppointmentFeePaymentResponse);
  rpc PaymentCallback (PaymentCallBackRequest) returns (PaymentCallBackResponse);
}
message CreateRazorOrderIdRequest{
    int64 appointment_id = 1;
    string patient_id = 2;
    int64 specialization_id = 3;
    double amount =4;
    string type =5;
}
message CreateRazorOrderIdResponse{
    string payment_url = 1;
    string status =2;
    string message = 3;
    int32 status_code =4;
}
message CreateAppointmentFeePaymentRequest {
  string patient_id = 1;
  int32 specialization_id = 2;
  double amount = 3;
  string type = 4; // e.g., "appointment_fee"
}

message CreateAppointmentFeePaymentResponse {
  string payment_id = 1;
  string status = 2;
  string message = 3;
  string payment_url = 5;
}
message PaymentCallBackRequest {
  string order_id = 1;
  string payment_id = 2;
  string signature = 3;
  string status = 4;  
  string patient_id = 5;
  double amount = 6;
}

// Message structure for the callback response
message PaymentCallBackResponse {
  string message = 1;
  bool success = 2;
}