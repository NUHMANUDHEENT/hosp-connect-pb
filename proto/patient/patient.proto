syntax = "proto3";

package patient;

import "google/protobuf/any.proto";

option go_package = "/patient";

// The Patient service definition.
service PatientService {

  rpc SignUp (SignUpRequest) returns (StandardResponse);

  rpc SignUpVerify (SignUpVerifyRequest) returns (StandardResponse);

  rpc SignIn (SignInRequest) returns (SignInResponse);

  rpc GetProfile(GetProfileRequest) returns (GetProfileResponse);

   rpc UpdateProfile(UpdateProfileRequest) returns (StandardResponse);

   rpc AddPrescription(AddPrescriptionRequest) returns (StandardResponse);

   rpc GetPrescription(GetPrescriptionRequest) returns (GetPrescriptionResponse);
}


message SignUpRequest {
  string name = 1;
  string email = 2;
  string password = 3;
  int32 phone = 4;
  int32 age = 5;
  string gender = 6;
}

message SignUpVerifyRequest{
  string token = 1;
}

message SignInRequest {
  string email = 1;
  string password = 2;
}
message SignInResponse{
  string status = 1;
  int32 status_code = 2; 
  string message = 3;
  string patientId = 4;
}


message GetPatientProfileRequest {
  string patientId = 1;
}


message UpdatePatientProfileRequest {
  string name = 2;
  string email = 3;
  int32 phone = 4;
  int32 age = 5;
  string gender = 6;
  string medical_history = 7;
}

message StandardResponse {
  string status = 1;
  int32 status_code = 2; 
  string message = 3;    
  string error = 4;    
  google.protobuf.Any data = 5;  
}


message GetProfileRequest {
    string patientId = 1;
}

message GetProfileResponse {
    string email = 1;
    string name = 2;
    int32 phone = 3;
    int32 age = 4;
    string gender = 5;
    string status = 6;
    int32 statusCode = 7;
    string error = 8;
}

message UpdateProfileRequest {
    Patient patient = 1;
}

message Patient {
    string patientId = 1;
    string name = 2;
    string email = 3;
    int32 phone = 4;
    int32 age = 5;
    string gender = 6;
}

message ListPatientsResponse {
    repeated Patient patients = 1;
    string status = 2;
    int32 statusCode = 3;
    string error = 4;
}
message AddPrescriptionRequest{
  string patient_id = 1;
  string doctor_id = 2;
  repeated Prescription Prescription =3;
}
message Prescription{
  string doctor_id = 2;
  string medication = 3;
  string dosage = 4;
  string Frequency =5;
  string prescription_time =6;
}
message GetPrescriptionRequest{
    string patient_id =1;
    string query =2;
}
message GetPrescriptionResponse{
  string status = 1;
  repeated GetPresc Prescriptions = 2;
  string message = 3;
  string status_code = 4;
}
message GetPresc{
  string doctor_id= 1;
  repeated Prescription Prescriptions = 2;
  string prescription_time =3;
}